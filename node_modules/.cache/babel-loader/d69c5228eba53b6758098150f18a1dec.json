{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\scc_website\\\\src\\\\components\\\\Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOptions';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(ReactCSSTransitionGroup, {\n    className: \"container\",\n    component: \"div\",\n    transitionName: \"fade\",\n    transitionEnterTimoeout: 800,\n    transitionLeaveTimeout: 500,\n    transitionAppear: true,\n    transitionAppearTimeout: 500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    key: props.questionId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(QuestionCount, {\n    counter: props.questionId,\n    total: props.questionTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Question, {\n    content: props.question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"answerOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.answerOptions.map(renderAnswerOptions))));\n  return React.createElement(\"div\", {\n    className: \"quiz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(QuestionCount, {\n    counter: props.questionId,\n    total: props.questionTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Question, {\n    content: props.question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"answerOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.answerOptions.map(renderAnswerOptions)));\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["C:\\Users\\HP\\Desktop\\scc_website\\src\\components\\Quiz.js"],"names":["React","PropTypes","Question","QuestionCount","AnswerOption","ReactCSSTransitionGroup","Quiz","props","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","counter","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Question from '../components/Question';\r\nimport QuestionCount from '../components/QuestionCount';\r\nimport AnswerOption from '../components/AnswerOptions';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nfunction Quiz(props) {\r\n    function renderAnswerOptions(key) {\r\n        return (\r\n\r\n            <AnswerOption\r\n                key={key.content}\r\n                answerContent={key.content}\r\n                answerType={key.type}\r\n                answer={props.answer}\r\n                questionId={props.questionId}\r\n                onAnswerSelected={props.onAnswerSelected}\r\n            />\r\n        );\r\n    }\r\n    return (\r\n        <ReactCSSTransitionGroup\r\n            className=\"container\"\r\n            component=\"div\"\r\n            transitionName=\"fade\"\r\n            transitionEnterTimoeout={800}\r\n            transitionLeaveTimeout={500}\r\n            transitionAppear\r\n            transitionAppearTimeout={500}\r\n        >\r\n            <div key={props.questionId}>\r\n                <QuestionCount\r\n                    counter={props.questionId}\r\n                    total={props.questionTotal}\r\n                />\r\n                <Question content={props.question} />\r\n                <ul className=\"answerOptions\">\r\n                    {props.answerOptions.map(renderAnswerOptions)}\r\n                </ul>\r\n            </div>\r\n\r\n        </ReactCSSTransitionGroup>\r\n\r\n\r\n\r\n    );\r\n    return(\r\n        <div className=\"quiz\">\r\n            <QuestionCount\r\n                counter={props.questionId}\r\n                total={props.questionTotal}\r\n            />\r\n            <Question content={props.question} />\r\n            <ul className=\"answerOptions\">\r\n                {props.answerOptions.map(renderAnswerOptions)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nQuiz.propTypes = {\r\n    answer: PropTypes.string.isRequired,\r\n    answerOptions: PropTypes.array.isRequired,\r\n    counter: PropTypes.number.isRequired,\r\n    question: PropTypes.string.isRequired,\r\n    questionId: PropTypes.number.isRequired,\r\n    questionTotal: PropTypes.number.isRequired,\r\n    onAnswerSelected: PropTypes.func.isRequired\r\n};\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}